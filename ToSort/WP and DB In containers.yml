AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Deploy a service on AWS Fargate, hosted in a private subnet, but accessible
  via a public load balancer.
Parameters:
  EnvironmentName:
    Type: String
    Default: production
    Description: The name of the environment to add this service to
  ServiceName:
    Type: String
    Default: Wordpress
    Description: A name for the service
  ImageUrl:
    Type: String
    Default: wordpress
    Description: >-
      The url of a docker image that contains the application process that will
      handle the traffic for this service
  ContainerCpu:
    Type: Number
    Default: 256
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container
  ServiceNameDB:
    Type: String
    Default: MySQL
    Description: A name for the service
  ImageUrlDB:
    Type: String
    Default: 'mysql:5.7'
    Description: >-
      The url of a docker image that contains the application process that will
      handle the traffic for this service
  ContainerCpuDB:
    Type: Number
    Default: 512
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemoryDB:
    Type: Number
    Default: 1024
    Description: How much memory in megabytes to give the container
  Path:
    Type: String
    Default: '*'
    Description: >-
      A path on the load balancer that this service should be connected to. Use
      * to send all load balancer traffic to this service.
  DesiredCount:
    Type: Number
    Default: 1
    Description: How many copies of the service task to run
  Role:
    Type: String
    Default: ''
    Description: >-
      (Optional) An IAM role to give the service's containers if the code within
      needs to access other AWS resources like S3 buckets, DynamoDB tables, etc
Conditions:
  HasCustomRole: !Not
    - !Equals
      - Ref: Role
      - ''
Resources:
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '${EnvironmentName}-service-${ServiceName}'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 49272db4-f982-4595-ae27-b9a67317f747
  LogGroupDB:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '${EnvironmentName}-service-${ServiceNameDB}'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c32c08bb-1782-4309-b116-e36457285ae3
  TaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Ref ServiceName
      Cpu: !Ref ContainerCpu
      Memory: !Ref ContainerMemory
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        'Fn::ImportValue': !Sub '${EnvironmentName}:ECSTaskExecutionRole'
      TaskRoleArn:
        'Fn::If':
          - HasCustomRole
          - !Ref Role
          - !Ref 'AWS::NoValue'
      ContainerDefinitions:
        - Name: !Ref ServiceName
          Cpu: !Ref ContainerCpu
          Memory: !Ref ContainerMemory
          Image: !Ref ImageUrl
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub '${EnvironmentName}-service-${ServiceName}'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref ServiceName
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 729c5578-6be0-42f2-a8f8-ba6ae7619745
  Service:
    Type: 'AWS::ECS::Service'
    DependsOn: LoadBalancerRule
    Properties:
      ServiceName: !Ref ServiceName
      Cluster:
        'Fn::ImportValue': !Sub '${EnvironmentName}:ClusterName'
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: !Ref DesiredCount
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - 'Fn::ImportValue': !Sub '${EnvironmentName}:ContainerSecurityGroup'
          Subnets:
            - 'Fn::ImportValue': !Sub '${EnvironmentName}:PrivateSubnetOne'
            - 'Fn::ImportValue': !Sub '${EnvironmentName}:PrivateSubnetTwo'
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: !Ref ServiceName
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup
    Metadata:
      'AWS::CloudFormation::Designer':
        id: edf614fb-329b-4728-9035-c925ccee54e5
  TaskDefinitionDB:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: !Ref ServiceNameDB
      Cpu: !Ref ContainerCpuDB
      Memory: !Ref ContainerMemoryDB
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        'Fn::ImportValue': !Sub '${EnvironmentName}:ECSTaskExecutionRole'
      TaskRoleArn:
        'Fn::If':
          - HasCustomRole
          - !Ref Role
          - !Ref 'AWS::NoValue'
      ContainerDefinitions:
        - Name: !Ref ServiceNameDB
          Cpu: !Ref ContainerCpuDB
          Memory: !Ref ContainerMemoryDB
          Image: !Ref ImageUrlDB
          PortMappings:
            - ContainerPort: 3306
          Environment:
            - Name: MYSQL_DATABASE
              Value: exampledb
            - Name: MYSQL_ROOT_PASSWORD
              Value: example
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub '${EnvironmentName}-service-${ServiceNameDB}'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref ServiceNameDB
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 78a4b9de-3215-4f40-81ee-ec9fd1c08d17
  ServiceDB:
    Type: 'AWS::ECS::Service'
    DependsOn: LoadBalancerRule
    Properties:
      ServiceName: !Ref ServiceNameDB
      Cluster:
        'Fn::ImportValue': !Sub '${EnvironmentName}:ClusterName'
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: !Ref DesiredCount
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - 'Fn::ImportValue': !Sub '${EnvironmentName}:ContainerSecurityGroupDB'
          Subnets:
            - 'Fn::ImportValue': !Sub '${EnvironmentName}:PrivateSubnetOne'
            - 'Fn::ImportValue': !Sub '${EnvironmentName}:PrivateSubnetTwo'
      TaskDefinition: !Ref TaskDefinitionDB
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 45386b5f-86c5-46e2-a221-3d3257ddabd5
  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      Name: !Ref ServiceName
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-399
      UnhealthyThresholdCount: 2
      VpcId:
        'Fn::ImportValue': !Sub '${EnvironmentName}:VpcId'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 6587513a-8412-4994-94dc-73d8ec2e535d
  LoadBalancerRule:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      Conditions:
        - Field: path-pattern
          Values:
            - !Ref Path
      ListenerArn:
        'Fn::ImportValue': !Sub '${EnvironmentName}:PublicListener'
      Priority: 1
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 6ccebe73-072e-40ee-bfee-8c7b344a0e2a
Metadata:
  'AWS::CloudFormation::Designer':
    6587513a-8412-4994-94dc-73d8ec2e535d:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 300
      z: 1
      embeds: []
    6ccebe73-072e-40ee-bfee-8c7b344a0e2a:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 300
      z: 1
      embeds: []
    78a4b9de-3215-4f40-81ee-ec9fd1c08d17:
      size:
        width: 60
        height: 60
      position:
        x: 280
        'y': 500
      z: 1
      embeds: []
    45386b5f-86c5-46e2-a221-3d3257ddabd5:
      size:
        width: 60
        height: 60
      position:
        x: 280
        'y': 400
      z: 1
      embeds: []
      dependson:
        - 6ccebe73-072e-40ee-bfee-8c7b344a0e2a
    729c5578-6be0-42f2-a8f8-ba6ae7619745:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 500
      z: 1
      embeds: []
    edf614fb-329b-4728-9035-c925ccee54e5:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 400
      z: 1
      embeds: []
      dependson:
        - 6ccebe73-072e-40ee-bfee-8c7b344a0e2a
    c32c08bb-1782-4309-b116-e36457285ae3:
      size:
        width: 150
        height: 150
      position:
        x: 230
        'y': 130
      z: 1
      embeds: []
    49272db4-f982-4595-ae27-b9a67317f747:
      size:
        width: 150
        height: 150
      position:
        x: 30
        'y': 130
      z: 1
      embeds: []
