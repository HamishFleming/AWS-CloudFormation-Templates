AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Fargate: service that runs on a Fargate cluster based on fargate/cluster.yaml
  and uses a dedicated ALB, a cloudonaut.io template
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Parent Stacks
        Parameters:
          - ParentVPCStack
          - ParentClusterStack
          - ParentAuthProxyStack
          - ParentAlertStack
          - ParentZoneStack
          - ParentS3StackAccessLog
          - ParentClientStack1
          - ParentClientStack2
          - ParentClientStack3
          - ParentWAFStack
      - Label:
          default: Load Balancer Parameters
        Parameters:
          - LoadBalancerScheme
          - LoadBalancerCertificateArn
          - LoadBalancerIdleTimeout
          - LoadBalancerDeregistrationDelay
      - Label:
          default: Task Parameters
        Parameters:
          - TaskPolicies
          - ProxyImage
          - ProxyCommand
          - ProxyPort
          - ProxyEnvironment1Key
          - ProxyEnvironment1Value
          - ProxyEnvironment2Key
          - ProxyEnvironment2Value
          - ProxyEnvironment3Key
          - ProxyEnvironment3Value
          - AppImage
          - AppCommand
          - AppPort
          - AppEnvironment1Key
          - AppEnvironment1Value
          - AppEnvironment2Key
          - AppEnvironment2Value
          - AppEnvironment3Key
          - AppEnvironment3Value
          - SidecarImage
          - SidecarCommand
          - SidecarPort
          - SidecarEnvironment1Key
          - SidecarEnvironment1Value
          - SidecarEnvironment2Key
          - SidecarEnvironment2Value
          - SidecarEnvironment3Key
          - SidecarEnvironment3Value
      - Label:
          default: Service Parameters
        Parameters:
          - SubDomainNameWithDot
          - Cpu
          - Memory
          - SubnetsReach
          - AutoScaling
          - Spot
          - DesiredCount
          - MaxCapacity
          - MinCapacity
          - HealthCheckGracePeriod
          - LogsRetentionInDays
      - Label:
          default: Permission Parameters
        Parameters:
          - PermissionsBoundary
  'AWS::CloudFormation::Designer':
    a9ad444f-1a03-4c16-83ae-bd4aa8359715:
      size:
        width: 60
        height: 60
      position:
        x: 270
        'y': 90
      z: 1
      embeds: []
    a58b0329-3250-482c-82fe-ca09fadebcc3:
      size:
        width: 150
        height: 150
      position:
        x: 60
        'y': 90
      z: 1
      embeds: []
    590cea3d-a00f-4e50-9cb9-0d0d8413dd5e:
      size:
        width: 60
        height: 60
      position:
        x: 270
        'y': 210
      z: 1
      embeds: []
    fa768c9e-3554-400b-bd39-02974ff65565:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 300
      z: 1
      embeds: []
    5324b123-50be-4cd1-be1d-1a58ed2954e4:
      size:
        width: 60
        height: 60
      position:
        x: 390
        'y': 90
      z: 1
      embeds: []
    4468a3f8-4167-4405-8962-89d65f1cad00:
      size:
        width: 60
        height: 60
      position:
        x: 390
        'y': 210
      z: 1
      embeds: []
    6401c200-5bd4-478e-8b99-7043ffb3f149:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 330
      z: 1
      embeds: []
    b107154d-662b-4f67-a4b8-db6d55937ed8:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 330
      z: 1
      embeds: []
    15aec992-5427-423a-906b-fc38212f418e:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 330
      z: 1
      embeds: []
      isassociatedwith:
        - 6401c200-5bd4-478e-8b99-7043ffb3f149
    f5db69c0-7df1-4601-b3f1-c3c81c6035c7:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 420
      z: 1
      embeds: []
    2743d846-88fe-474e-b146-c2fef68c063b:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 450
      z: 1
      embeds: []
    83e2ecc0-a5d5-4da1-98b7-d57cb293aa7a:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 450
      z: 1
      embeds: []
    90aabe14-b142-4290-931e-253c14c567a2:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 450
      z: 1
      embeds: []
    b93505e3-612a-4d6e-962a-c758a8c83937:
      size:
        width: 60
        height: 60
      position:
        x: 510
        'y': 90
      z: 1
      embeds: []
      dependson:
        - 90aabe14-b142-4290-931e-253c14c567a2
    14e95492-89f7-46a1-b184-9b6e2cef0630:
      size:
        width: 60
        height: 60
      position:
        x: 510
        'y': 210
      z: 1
      embeds: []
    0ecbe679-2ce5-4dd7-a7cf-996dbd0a484c:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 330
      z: 1
      embeds: []
      isassociatedwith:
        - 14e95492-89f7-46a1-b184-9b6e2cef0630
    b524d6d1-cebe-483c-9159-c5cd00bc7d67:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 450
      z: 1
      embeds: []
    b7f83432-666e-4c81-b7b0-6ec9482a25e7:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 540
      z: 1
      embeds: []
      isassociatedwith:
        - 14e95492-89f7-46a1-b184-9b6e2cef0630
    6a3eb403-d473-47ef-8c68-98f28347c2fe:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 570
      z: 1
      embeds: []
    11b05629-e7cc-4136-9985-c62e039918a5:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 570
      z: 1
      embeds: []
    5e50b74d-d9a0-4d62-af3f-c051fb4dd598:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 570
      z: 1
      embeds: []
    3c642bd1-d625-4970-bd1c-05264a5edb3b:
      size:
        width: 60
        height: 60
      position:
        x: 540
        'y': 570
      z: 1
      embeds: []
    7720b48b-4a6e-4b06-bfd0-c801a97e5712:
      size:
        width: 60
        height: 60
      position:
        x: 630
        'y': 90
      z: 1
      embeds: []
    5c758dbe-3284-4250-8377-1f4f4e490348:
      size:
        width: 60
        height: 60
      position:
        x: 630
        'y': 210
      z: 1
      embeds: []
    56b7947c-39f2-42a6-a61f-b4a38207a6c5:
      size:
        width: 60
        height: 60
      position:
        x: 660
        'y': 330
      z: 1
      embeds: []
    0691a419-4959-4d47-a7b9-56c2fa48c2ae:
      size:
        width: 60
        height: 60
      position:
        x: 660
        'y': 450
      z: 1
      embeds: []
Parameters:
  ParentVPCStack:
    Description: Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.
    Type: String
  ParentClusterStack:
    Description: Stack name of parent Cluster stack based on fargate/cluster.yaml template.
    Type: String
  ParentAuthProxyStack:
    Description: >-
      Optional stack name of parent auth proxy stack based on
      security/auth-proxy-*.yaml template.
    Type: String
    Default: ''
  ParentAlertStack:
    Description: >-
      Optional but recommended stack name of parent alert stack based on
      operations/alert.yaml template.
    Type: String
    Default: ''
  ParentZoneStack:
    Description: >-
      Optional stack name of parent zone stack based on vpc/zone-*.yaml
      template.
    Type: String
    Default: ''
  ParentS3StackAccessLog:
    Description: >-
      Optional stack name of parent s3 stack based on state/s3.yaml template
      (with Access set to ElbAccessLogWrite) to store access logs.
    Type: String
    Default: ''
  ParentClientStack1:
    Description: >-
      Optional stack name of parent Client Security Group stack based on
      state/client-sg.yaml template to allow network access from the service to
      whatever uses the client security group.
    Type: String
    Default: ''
  ParentClientStack2:
    Description: >-
      Optional stack name of parent Client Security Group stack based on
      state/client-sg.yaml template to allow network access from the service to
      whatever uses the client security group.
    Type: String
    Default: ''
  ParentClientStack3:
    Description: >-
      Optional stack name of parent Client Security Group stack based on
      state/client-sg.yaml template to allow network access from the service to
      whatever uses the client security group.
    Type: String
    Default: ''
  ParentWAFStack:
    Description: >-
      Optional stack name of parent WAF stack based on the security/waf.yaml
      template.
    Type: String
    Default: ''
  PermissionsBoundary:
    Description: >-
      Optional ARN for a policy that will be used as the permission boundary for
      all roles created by this template.
    Type: String
    Default: ''
  LoadBalancerScheme:
    Description: >-
      Indicates whether the load balancer in front of the ECS service is
      internet-facing or internal.
    Type: String
    Default: internet-facing
    AllowedValues:
      - internet-facing
      - internal
  LoadBalancerCertificateArn:
    Description: >-
      Optional Amazon Resource Name (ARN) of the certificate to associate with
      the load balancer. If set, HTTP requests are redirected to HTTPS.
    Type: String
    Default: ''
  LoadBalancerIdleTimeout:
    Description: 'The idle timeout value, in seconds.'
    Type: Number
    Default: 60
    MinValue: 1
    MaxValue: 4000
  LoadBalancerDeregistrationDelay:
    Description: >-
      The amount time (in seconds) to wait before changing the state of a
      deregistering target from draining to unused.
    Type: Number
    Default: 60
    ConstraintDescription: 'Must be in the range [0-3600]'
    MinValue: 0
    MaxValue: 3600
  TaskPolicies:
    Description: >-
      Comma-delimited list of IAM managed policy ARNs to attach to the task IAM
      role
    Type: String
    Default: ''
  ProxyImage:
    Description: >-
      Optional Docker image to use for the proxy container. You can use images
      in the Docker Hub registry or specify other repositories
      (repository-url/image:tag).
    Type: String
    Default: ''
  ProxyCommand:
    Description: Optional command used when starting the proxy container.
    Type: String
    Default: ''
  ProxyPort:
    Description: >-
      The port exposed by the proxy container that receives traffic from the
      load balancer (ProxyPort <> AppPort <> SidecarPort; ignored if ProxyImage
      is not set).
    Type: Number
    Default: 8000
    MinValue: 1
    MaxValue: 49150
  ProxyEnvironment1Key:
    Description: Optional environment variable 1 key for proxy container.
    Type: String
    Default: ''
  ProxyEnvironment1Value:
    Description: Optional environment variable 1 value for proxy container.
    Type: String
    Default: ''
  ProxyEnvironment2Key:
    Description: Optional environment variable 2 key for proxy container.
    Type: String
    Default: ''
  ProxyEnvironment2Value:
    Description: Optional environment variable 2 value for proxy container.
    Type: String
    Default: ''
  ProxyEnvironment3Key:
    Description: Optional environment variable 3 key for proxy container.
    Type: String
    Default: ''
  ProxyEnvironment3Value:
    Description: Optional environment variable 3 value for proxy container.
    Type: String
    Default: ''
  AppImage:
    Description: >-
      The Docker image to use for the app container. You can use images in the
      Docker Hub registry or specify other repositories
      (repository-url/image:tag).
    Type: String
    Default: 'widdix/hello:v1'
  AppCommand:
    Description: Optional commands (comma-delimited) used when starting the app container.
    Type: String
    Default: ''
  AppPort:
    Description: >-
      The port exposed by the app container that receives traffic from the load
      balancer or the proxy container (AppPort <> ProxyPort <> SidecarPort).
    Type: Number
    Default: 80
    MinValue: 1
    MaxValue: 49150
  AppEnvironment1Key:
    Description: Optional environment variable 1 key for app container.
    Type: String
    Default: ''
  AppEnvironment1Value:
    Description: Optional environment variable 1 value for app container.
    Type: String
    Default: ''
  AppEnvironment2Key:
    Description: Optional environment variable 2 key for app container.
    Type: String
    Default: ''
  AppEnvironment2Value:
    Description: Optional environment variable 2 value for app container.
    Type: String
    Default: ''
  AppEnvironment3Key:
    Description: Optional environment variable 3 key for app container.
    Type: String
    Default: ''
  AppEnvironment3Value:
    Description: Optional environment variable 3 value for app container.
    Type: String
    Default: ''
  SidecarImage:
    Description: >-
      Optional Docker image to use for the sidecar container. You can use images
      in the Docker Hub registry or specify other repositories
      (repository-url/image:tag).
    Type: String
    Default: ''
  SidecarCommand:
    Description: Optional command used when starting the sidecar container.
    Type: String
    Default: ''
  SidecarPort:
    Description: >-
      The port exposed by the sidecar container reachable from the app container
      on host localhost (SidecarPort <> ProxyPort <> AppPort).
    Type: Number
    Default: 9000
    MinValue: 1
    MaxValue: 49150
  SidecarEnvironment1Key:
    Description: Optional environment variable 1 key for sidecar container.
    Type: String
    Default: ''
  SidecarEnvironment1Value:
    Description: Optional environment variable 1 value for sidecar container.
    Type: String
    Default: ''
  SidecarEnvironment2Key:
    Description: Optional environment variable 2 key for sidecar container.
    Type: String
    Default: ''
  SidecarEnvironment2Value:
    Description: Optional environment variable 2 value for sidecar container.
    Type: String
    Default: ''
  SidecarEnvironment3Key:
    Description: Optional environment variable 3 key for sidecar container.
    Type: String
    Default: ''
  SidecarEnvironment3Value:
    Description: Optional environment variable 3 value for sidecar container.
    Type: String
    Default: ''
  SubDomainNameWithDot:
    Description: >-
      Name that is used to create the DNS entry with trailing dot, e.g.
      ��{SubDomainNameWithDot}��{HostedZoneName}. Leave blank for naked (or apex
      and bare) domain. Requires ParentZoneStack parameter!
    Type: String
    Default: ''
  Cpu:
    Description: The minimum number of vCPUs to reserve for the container.
    Type: String
    Default: '0.25'
    AllowedValues:
      - '0.25'
      - '0.5'
      - '1'
      - '2'
      - '4'
  Memory:
    Description: The amount (in GB) of memory used by the task.
    Type: String
    Default: '0.5'
    AllowedValues:
      - '0.5'
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      - '10'
      - '11'
      - '12'
      - '13'
      - '14'
      - '15'
      - '16'
      - '17'
      - '18'
      - '19'
      - '20'
      - '21'
      - '22'
      - '23'
      - '24'
      - '25'
      - '26'
      - '27'
      - '28'
      - '29'
      - '30'
  DesiredCount:
    Description: 'The number of simultaneous tasks, that you want to run on the cluster.'
    Type: Number
    Default: 2
    ConstraintDescription: Must be >= 1
    MinValue: 1
  MaxCapacity:
    Description: >-
      The maximum number of simultaneous tasks, that you want to run on the
      cluster.
    Type: Number
    Default: 4
    ConstraintDescription: Must be >= 1
    MinValue: 1
  MinCapacity:
    Description: >-
      The minimum number of simultaneous tasks, that you want to run on the
      cluster.
    Type: Number
    Default: 2
    ConstraintDescription: Must be >= 1
    MinValue: 1
  LogsRetentionInDays:
    Description: >-
      Specifies the number of days you want to retain log events in the
      specified log group.
    Type: Number
    Default: 14
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
      - 120
      - 150
      - 180
      - 365
      - 400
      - 545
      - 731
      - 1827
      - 3653
  SubnetsReach:
    Description: >-
      Should the service have direct access to the Internet or do you prefer
      private subnets with NAT?
    Type: String
    Default: Public
    AllowedValues:
      - Public
      - Private
  AutoScaling:
    Description: Scale number of tasks based on CPU load?
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
  HealthCheckGracePeriod:
    Description: >-
      The period of time, in seconds, that the Amazon ECS service scheduler
      ignores unhealthy Elastic Load Balancing target health checks after a task
      has first started.
    Type: Number
    Default: 60
    MinValue: 0
    MaxValue: 1800
  Spot:
    Description: Run workload on spot capacity?
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
Mappings:
  CpuMap:
    '1':
      Cpu: 1024
    '2':
      Cpu: 2048
    '4':
      Cpu: 4096
    '0.25':
      Cpu: 256
    '0.5':
      Cpu: 512
  MemoryMap:
    '1':
      Memory: 1024
    '2':
      Memory: 2048
    '3':
      Memory: 3072
    '4':
      Memory: 4096
    '5':
      Memory: 5120
    '6':
      Memory: 6144
    '7':
      Memory: 7168
    '8':
      Memory: 8192
    '9':
      Memory: 9216
    '10':
      Memory: 10240
    '11':
      Memory: 11264
    '12':
      Memory: 12288
    '13':
      Memory: 13312
    '14':
      Memory: 14336
    '15':
      Memory: 15360
    '16':
      Memory: 16384
    '17':
      Memory: 17408
    '18':
      Memory: 18432
    '19':
      Memory: 19456
    '20':
      Memory: 20480
    '21':
      Memory: 21504
    '22':
      Memory: 22528
    '23':
      Memory: 23552
    '24':
      Memory: 24576
    '25':
      Memory: 25600
    '26':
      Memory: 26624
    '27':
      Memory: 27648
    '28':
      Memory: 28672
    '29':
      Memory: 29696
    '30':
      Memory: 30720
    '0.5':
      Memory: 512
Conditions:
  HasPermissionsBoundary: !Not 
    - !Equals 
      - Ref: PermissionsBoundary
      - ''
  HasAuthProxySecurityGroup: !Not 
    - !Equals 
      - !Ref ParentAuthProxyStack
      - ''
  HasNotAuthProxySecurityGroup: !Equals 
    - !Ref ParentAuthProxyStack
    - ''
  HasLoadBalancerSchemeInternetFacing: !Equals 
    - !Ref LoadBalancerScheme
    - internet-facing
  HasLoadBalancerSchemeInternal: !Equals 
    - Ref: LoadBalancerScheme
    - internal
  HasLoadBalancerCertificateArn: !Not 
    - !Equals 
      - Ref: LoadBalancerCertificateArn
      - ''
  HasAuthProxySecurityGroupAndLoadBalancerCertificateArn: !And 
    - !Condition HasAuthProxySecurityGroup
    - !Condition HasLoadBalancerCertificateArn
  HasNotAuthProxySecurityGroupAndLoadBalancerCertificateArn: !And 
    - !Condition HasNotAuthProxySecurityGroup
    - !Condition HasLoadBalancerCertificateArn
  HasAlertTopic: !Not 
    - !Equals 
      - !Ref ParentAlertStack
      - ''
  HasZone: !Not 
    - !Equals 
      - !Ref ParentZoneStack
      - ''
  HasZoneAndLoadBalancerSchemeInternetFacing: !And 
    - !Condition HasZone
    - !Condition HasLoadBalancerSchemeInternetFacing
  HasS3Bucket: !Not 
    - !Equals 
      - Ref: ParentS3StackAccessLog
      - ''
  HasSubnetsReachPublic: !Equals 
    - Ref: SubnetsReach
    - Public
  HasAutoScaling: !Equals 
    - !Ref AutoScaling
    - 'true'
  HasClientSecurityGroup1: !Not 
    - !Equals 
      - Ref: ParentClientStack1
      - ''
  HasClientSecurityGroup2: !Not 
    - !Equals 
      - Ref: ParentClientStack2
      - ''
  HasClientSecurityGroup3: !Not 
    - !Equals 
      - Ref: ParentClientStack3
      - ''
  HasTaskPolicies: !Not 
    - !Equals 
      - Ref: TaskPolicies
      - ''
  HasAppCommand: !Not 
    - !Equals 
      - Ref: AppCommand
      - ''
  HasAppEnvironment1Key: !Not 
    - !Equals 
      - Ref: AppEnvironment1Key
      - ''
  HasAppEnvironment2Key: !Not 
    - !Equals 
      - Ref: AppEnvironment2Key
      - ''
  HasAppEnvironment3Key: !Not 
    - !Equals 
      - Ref: AppEnvironment3Key
      - ''
  HasProxyImage: !Not 
    - !Equals 
      - Ref: ProxyImage
      - ''
  HasProxyCommand: !Not 
    - !Equals 
      - Ref: ProxyCommand
      - ''
  HasProxyEnvironment1Key: !Not 
    - !Equals 
      - Ref: ProxyEnvironment1Key
      - ''
  HasProxyEnvironment2Key: !Not 
    - !Equals 
      - Ref: ProxyEnvironment2Key
      - ''
  HasProxyEnvironment3Key: !Not 
    - !Equals 
      - Ref: ProxyEnvironment3Key
      - ''
  HasSidecarImage: !Not 
    - !Equals 
      - Ref: SidecarImage
      - ''
  HasSidecarCommand: !Not 
    - !Equals 
      - Ref: SidecarCommand
      - ''
  HasSidecarEnvironment1Key: !Not 
    - !Equals 
      - Ref: SidecarEnvironment1Key
      - ''
  HasSidecarEnvironment2Key: !Not 
    - !Equals 
      - Ref: SidecarEnvironment2Key
      - ''
  HasSidecarEnvironment3Key: !Not 
    - !Equals 
      - Ref: SidecarEnvironment3Key
      - ''
  HasWAF: !Not 
    - !Equals 
      - !Ref ParentWAFStack
      - ''
  HasSpot: !Equals 
    - Ref: Spot
    - 'true'
Resources:
  RecordSet:
    Condition: HasZone
    Type: 'AWS::Route53::RecordSet'
    Properties:
      AliasTarget:
        HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
        DNSName: !GetAtt LoadBalancer.DNSName
      HostedZoneId:
        'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneId'
      Name: !Sub 
        - '${SubDomainNameWithDot}${HostedZoneName}'
        - SubDomainNameWithDot: !Ref SubDomainNameWithDot
          HostedZoneName:
            'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneName'
      Type: A
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0691a419-4959-4d47-a7b9-56c2fa48c2ae
  RecordSetIPv6:
    Condition: HasZoneAndLoadBalancerSchemeInternetFacing
    Type: 'AWS::Route53::RecordSet'
    Properties:
      AliasTarget:
        HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
        DNSName: !GetAtt LoadBalancer.DNSName
      HostedZoneId:
        'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneId'
      Name: !Sub 
        - '${SubDomainNameWithDot}${HostedZoneName}'
        - SubDomainNameWithDot: !Ref SubDomainNameWithDot
          HostedZoneName:
            'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneName'
      Type: AAAA
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 56b7947c-39f2-42a6-a61f-b4a38207a6c5
  LoadBalancerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub '${AWS::StackName}-load-balancer'
      VpcId:
        'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 6401c200-5bd4-478e-8b99-7043ffb3f149
  LoadBalancerSecurityGroupInHttpFromWorld:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Condition: HasNotAuthProxySecurityGroup
    Properties:
      GroupId: !Ref LoadBalancerSecurityGroup
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0
  LoadBalancerSecurityGroupInHttpFromWorldIPv6:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Condition: HasNotAuthProxySecurityGroup
    Properties:
      GroupId: !Ref LoadBalancerSecurityGroup
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIpv6: '::/0'
  LoadBalancerSecurityGroupInHttpsFromWorld:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Condition: HasNotAuthProxySecurityGroupAndLoadBalancerCertificateArn
    Properties:
      GroupId: !Ref LoadBalancerSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: 0.0.0.0/0
  LoadBalancerSecurityGroupInHttpsFromWorldIPv6:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Condition: HasNotAuthProxySecurityGroupAndLoadBalancerCertificateArn
    Properties:
      GroupId: !Ref LoadBalancerSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIpv6: '::/0'
  LoadBalancerSecurityGroupInHttpFromAuthProxy:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Condition: HasAuthProxySecurityGroup
    Properties:
      GroupId: !Ref LoadBalancerSecurityGroup
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      SourceSecurityGroupId:
        'Fn::ImportValue': !Sub '${ParentAuthProxyStack}-SecurityGroup'
  LoadBalancerSecurityGroupInHttpsFromAuthProxy:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Condition: HasAuthProxySecurityGroupAndLoadBalancerCertificateArn
    Properties:
      GroupId: !Ref LoadBalancerSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      SourceSecurityGroupId:
        'Fn::ImportValue': !Sub '${ParentAuthProxyStack}-SecurityGroup'
  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      IpAddressType: !If 
        - HasLoadBalancerSchemeInternal
        - ipv4
        - dualstack
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: !Ref LoadBalancerIdleTimeout
        - Key: routing.http2.enabled
          Value: 'true'
        - Key: access_logs.s3.enabled
          Value: !If 
            - HasS3Bucket
            - 'true'
            - 'false'
        - !If 
          - HasS3Bucket
          - Key: access_logs.s3.prefix
            Value: !Ref 'AWS::StackName'
          - !Ref 'AWS::NoValue'
        - !If 
          - HasS3Bucket
          - Key: access_logs.s3.bucket
            Value:
              'Fn::ImportValue': !Sub '${ParentS3StackAccessLog}-BucketName'
          - !Ref 'AWS::NoValue'
      Scheme: !Ref LoadBalancerScheme
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Subnets: !If 
        - HasLoadBalancerSchemeInternal
        - !Split 
          - ','
          - 'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetsPrivate'
        - !Split 
          - ','
          - 'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetsPublic'
      Type: application
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 15aec992-5427-423a-906b-fc38212f418e
  WebACLAssociation:
    Condition: HasWAF
    Type: 'AWS::WAFv2::WebACLAssociation'
    Properties:
      ResourceArn: !Ref LoadBalancer
      WebACLArn:
        'Fn::ImportValue': !Sub '${ParentWAFStack}-WebACL'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5c758dbe-3284-4250-8377-1f4f4e490348
  HTTPCodeELB5XXTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Application load balancer returns 5XX HTTP status codes
      Namespace: AWS/ApplicationELB
      MetricName: HTTPCode_ELB_5XX_Count
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
        - 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt LoadBalancer.LoadBalancerFullName
      TreatMissingData: notBreaching
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 7720b48b-4a6e-4b06-bfd0-c801a97e5712
  RejectedConnectionCountTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        Application load balancer rejected connections because the load balancer
        had reached its maximum number of connections
      Namespace: AWS/ApplicationELB
      MetricName: RejectedConnectionCount
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
        - 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt LoadBalancer.LoadBalancerFullName
      TreatMissingData: notBreaching
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 3c642bd1-d625-4970-bd1c-05264a5edb3b
  HttpListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - !If 
          - HasLoadBalancerCertificateArn
          - RedirectConfig:
              Port: '443'
              Protocol: HTTPS
              StatusCode: HTTP_301
            Type: redirect
          - TargetGroupArn: !Ref TargetGroup
            Type: forward
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 90aabe14-b142-4290-931e-253c14c567a2
  HttpsListener:
    Condition: HasLoadBalancerCertificateArn
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      Certificates:
        - CertificateArn: !Ref LoadBalancerCertificateArn
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-FS-1-2-Res-2019-08
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 83e2ecc0-a5d5-4da1-98b7-d57cb293aa7a
  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: 200-299
      Port: 8080
      Protocol: HTTP
      TargetType: ip
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: !Ref LoadBalancerDeregistrationDelay
      VpcId:
        'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 4468a3f8-4167-4405-8962-89d65f1cad00
  HTTPCodeTarget5XXTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Application load balancer receives 5XX HTTP status codes from targets
      Namespace: AWS/ApplicationELB
      MetricName: HTTPCode_Target_5XX_Count
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
        - 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt LoadBalancer.LoadBalancerFullName
        - Name: TargetGroup
          Value: !GetAtt TargetGroup.TargetGroupFullName
      TreatMissingData: notBreaching
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 2743d846-88fe-474e-b146-c2fef68c063b
  TargetConnectionErrorCountTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Application load balancer could not connect to targets
      Namespace: AWS/ApplicationELB
      MetricName: TargetConnectionErrorCount
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
        - 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt LoadBalancer.LoadBalancerFullName
        - Name: TargetGroup
          Value: !GetAtt TargetGroup.TargetGroupFullName
      TreatMissingData: notBreaching
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f5db69c0-7df1-4601-b3f1-c3c81c6035c7
  TaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      PermissionsBoundary: !If 
        - HasPermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref 'AWS::NoValue'
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:BatchGetImage'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !GetAtt LogGroup.Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: fa768c9e-3554-400b-bd39-02974ff65565
  TaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns: !If 
        - HasTaskPolicies
        - !Split 
          - ','
          - !Ref TaskPolicies
        - !Ref 'AWS::NoValue'
      PermissionsBoundary: !If 
        - HasPermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref 'AWS::NoValue'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 590cea3d-a00f-4e50-9cb9-0d0d8413dd5e
  TaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ContainerDefinitions:
        - !If 
          - HasProxyImage
          - Name: proxy
            Image: !Ref ProxyImage
            Command: !If 
              - HasProxyCommand
              - !Ref ProxyCommand
              - !Ref 'AWS::NoValue'
            PortMappings:
              - ContainerPort: !Ref ProxyPort
                Protocol: tcp
            Essential: true
            LogConfiguration:
              LogDriver: awslogs
              Options:
                awslogs-region: !Ref 'AWS::Region'
                awslogs-group: !Ref LogGroup
                awslogs-stream-prefix: proxy
            Environment:
              - !If 
                - HasProxyEnvironment1Key
                - Name: !Ref ProxyEnvironment1Key
                  Value: !Ref ProxyEnvironment1Value
                - !Ref 'AWS::NoValue'
              - !If 
                - HasProxyEnvironment2Key
                - Name: !Ref ProxyEnvironment2Key
                  Value: !Ref ProxyEnvironment2Value
                - !Ref 'AWS::NoValue'
              - !If 
                - HasProxyEnvironment3Key
                - Name: !Ref ProxyEnvironment3Key
                  Value: !Ref ProxyEnvironment3Value
                - !Ref 'AWS::NoValue'
          - !Ref 'AWS::NoValue'
        - Name: app
          Image: !Ref AppImage
          Command: !If 
            - HasAppCommand
            - !Split 
              - ','
              - !Ref AppCommand
            - !Ref 'AWS::NoValue'
          PortMappings:
            - ContainerPort: !Ref AppPort
              Protocol: tcp
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref 'AWS::Region'
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: app
          Environment:
            - !If 
              - HasAppEnvironment1Key
              - Name: !Ref AppEnvironment1Key
                Value: !Ref AppEnvironment1Value
              - !Ref 'AWS::NoValue'
            - !If 
              - HasAppEnvironment2Key
              - Name: !Ref AppEnvironment2Key
                Value: !Ref AppEnvironment2Value
              - !Ref 'AWS::NoValue'
            - !If 
              - HasAppEnvironment3Key
              - Name: !Ref AppEnvironment3Key
                Value: !Ref AppEnvironment3Value
              - !Ref 'AWS::NoValue'
        - !If 
          - HasSidecarImage
          - Name: sidecar
            Image: !Ref SidecarImage
            Command: !If 
              - HasSidecarCommand
              - !Ref SidecarCommand
              - !Ref 'AWS::NoValue'
            PortMappings:
              - ContainerPort: !Ref SidecarPort
                Protocol: tcp
            Essential: true
            LogConfiguration:
              LogDriver: awslogs
              Options:
                awslogs-region: !Ref 'AWS::Region'
                awslogs-group: !Ref LogGroup
                awslogs-stream-prefix: sidecar
            Environment:
              - !If 
                - HasSidecarEnvironment1Key
                - Name: !Ref SidecarEnvironment1Key
                  Value: !Ref SidecarEnvironment1Value
                - !Ref 'AWS::NoValue'
              - !If 
                - HasSidecarEnvironment2Key
                - Name: !Ref SidecarEnvironment2Key
                  Value: !Ref SidecarEnvironment2Value
                - !Ref 'AWS::NoValue'
              - !If 
                - HasSidecarEnvironment3Key
                - Name: !Ref SidecarEnvironment3Key
                  Value: !Ref SidecarEnvironment3Value
                - !Ref 'AWS::NoValue'
          - !Ref 'AWS::NoValue'
      Cpu: !FindInMap 
        - CpuMap
        - !Ref Cpu
        - Cpu
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      Family: !Ref 'AWS::StackName'
      Memory: !FindInMap 
        - MemoryMap
        - !Ref Memory
        - Memory
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !GetAtt TaskRole.Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5324b123-50be-4cd1-be1d-1a58ed2954e4
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: !Ref LogsRetentionInDays
    Metadata:
      'AWS::CloudFormation::Designer':
        id: a58b0329-3250-482c-82fe-ca09fadebcc3
  ServiceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub '${AWS::StackName}-service'
      VpcId:
        'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup
          FromPort: 0
          ToPort: 65535
          IpProtocol: tcp
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b107154d-662b-4f67-a4b8-db6d55937ed8
  Service:
    Type: 'AWS::ECS::Service'
    DependsOn: HttpListener
    Properties:
      CapacityProviderStrategy:
        - Base: 0
          CapacityProvider: !If 
            - HasSpot
            - FARGATE_SPOT
            - FARGATE
          Weight: 1
      Cluster:
        'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      DesiredCount: !Ref DesiredCount
      HealthCheckGracePeriodSeconds: !Ref HealthCheckGracePeriod
      LoadBalancers:
        - ContainerName: !If 
            - HasProxyImage
            - proxy
            - app
          ContainerPort: !If 
            - HasProxyImage
            - !Ref ProxyPort
            - !Ref AppPort
          TargetGroupArn: !Ref TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: !If 
            - HasSubnetsReachPublic
            - ENABLED
            - DISABLED
          SecurityGroups:
            - !Ref ServiceSecurityGroup
            - !If 
              - HasClientSecurityGroup1
              - 'Fn::ImportValue': !Sub '${ParentClientStack1}-ClientSecurityGroup'
              - !Ref 'AWS::NoValue'
            - !If 
              - HasClientSecurityGroup2
              - 'Fn::ImportValue': !Sub '${ParentClientStack2}-ClientSecurityGroup'
              - !Ref 'AWS::NoValue'
            - !If 
              - HasClientSecurityGroup3
              - 'Fn::ImportValue': !Sub '${ParentClientStack3}-ClientSecurityGroup'
              - !Ref 'AWS::NoValue'
          Subnets: !Split 
            - ','
            - 'Fn::ImportValue': !Sub '${ParentVPCStack}-Subnets${SubnetsReach}'
      PlatformVersion: 1.4.0
      TaskDefinition: !Ref TaskDefinition
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b93505e3-612a-4d6e-962a-c758a8c83937
  CPUUtilizationTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Average CPU utilization over last 10 minutes higher than 80%
      Namespace: AWS/ECS
      Dimensions:
        - Name: ClusterName
          Value:
            'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'
        - Name: ServiceName
          Value: !GetAtt Service.Name
      MetricName: CPUUtilization
      ComparisonOperator: GreaterThanThreshold
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 80
      AlarmActions:
        - 'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5e50b74d-d9a0-4d62-af3f-c051fb4dd598
  ServiceFailedNotification:
    Condition: HasAlertTopic
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - aws.ecs
        detail-type:
          - ECS Service Action
        resources:
          - !Ref Service
        detail:
          eventType:
            - ERROR
            - WARN
      State: ENABLED
      Targets:
        - Arn:
            'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'
          Id: rule
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 11b05629-e7cc-4136-9985-c62e039918a5
  ScalableTargetRole:
    Condition: HasAutoScaling
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: application-autoscaling.amazonaws.com
            Action: 'sts:AssumeRole'
      PermissionsBoundary: !If 
        - HasPermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref 'AWS::NoValue'
      Policies:
        - PolicyName: AmazonEC2ContainerServiceAutoscaleRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ecs:DescribeServices'
                  - 'ecs:UpdateService'
                Resource: '*'
        - PolicyName: cloudwatch
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudwatch:DescribeAlarms'
                Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: a9ad444f-1a03-4c16-83ae-bd4aa8359715
  ScalableTarget:
    Condition: HasAutoScaling
    Type: 'AWS::ApplicationAutoScaling::ScalableTarget'
    Properties:
      MaxCapacity: !Ref MaxCapacity
      MinCapacity: !Ref MinCapacity
      ResourceId: !Sub 
        - 'service/${Cluster}/${Service}'
        - Cluster:
            'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'
          Service: !GetAtt Service.Name
      RoleARN: !GetAtt ScalableTargetRole.Arn
      ScalableDimension: 'ecs:service:DesiredCount'
      ServiceNamespace: ecs
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 14e95492-89f7-46a1-b184-9b6e2cef0630
  ScaleUpPolicy:
    Condition: HasAutoScaling
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: !Sub '${AWS::StackName}-scale-up'
      PolicyType: StepScaling
      ScalingTargetId: !Ref ScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 300
        MinAdjustmentMagnitude: 1
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            ScalingAdjustment: 25
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b7f83432-666e-4c81-b7b0-6ec9482a25e7
  ScaleDownPolicy:
    Condition: HasAutoScaling
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: !Sub '${AWS::StackName}-scale-down'
      PolicyType: StepScaling
      ScalingTargetId: !Ref ScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 300
        MinAdjustmentMagnitude: 1
        StepAdjustments:
          - MetricIntervalUpperBound: 0
            ScalingAdjustment: -25
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0ecbe679-2ce5-4dd7-a7cf-996dbd0a484c
  CPUUtilizationHighAlarm:
    Condition: HasAutoScaling
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Service is running out of CPU
      Namespace: AWS/ECS
      Dimensions:
        - Name: ClusterName
          Value:
            'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'
        - Name: ServiceName
          Value: !GetAtt Service.Name
      MetricName: CPUUtilization
      ComparisonOperator: GreaterThanThreshold
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 60
      AlarmActions:
        - !Ref ScaleUpPolicy
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 6a3eb403-d473-47ef-8c68-98f28347c2fe
  CPUUtilizationLowAlarm:
    Condition: HasAutoScaling
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Service is wasting CPU
      Namespace: AWS/ECS
      Dimensions:
        - Name: ClusterName
          Value:
            'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'
        - Name: ServiceName
          Value: !GetAtt Service.Name
      MetricName: CPUUtilization
      ComparisonOperator: LessThanThreshold
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      Threshold: 30
      AlarmActions:
        - !Ref ScaleDownPolicy
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b524d6d1-cebe-483c-9159-c5cd00bc7d67
Outputs:
  TemplateID:
    Description: cloudonaut.io template id.
    Value: fargate/service-dedicated-alb
  TemplateVersion:
    Description: cloudonaut.io template version.
    Value: 14.4.0
  StackName:
    Description: Stack name.
    Value: !Sub '${AWS::StackName}'
  DNSName:
    Description: The DNS name for the Fargate service load balancer.
    Value: !GetAtt LoadBalancer.DNSName
    Export:
      Name: !Sub '${AWS::StackName}-DNSName'
  URL:
    Description: URL to the Fargate service.
    Value: !Sub 'http://${LoadBalancer.DNSName}'
    Export:
      Name: !Sub '${AWS::StackName}-URL'
