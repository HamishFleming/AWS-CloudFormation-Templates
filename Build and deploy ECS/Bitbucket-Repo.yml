AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: App services on ECS.
Parameters:
  GitHubAuthToken:
    Description: GitHub access token.
    Type: String
  RepoOwner:
    Description: Name of the GitHub user or org who owns the repository.
    Type: String
  RepoName:
    Description: The GitHub repo name.
    Type: String
  BranchName:
    Description: Name of repo branch to watch.
    Type: String
  PipelineBucketName:
    Description: Name of S3 bucket to create for CodePipeline.
    Type: String
Resources:
  EcsCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: !Ref 'AWS::StackName'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b0eee512-5e4b-4326-a549-f8c1a8265954
  EcsServiceScalingTargetRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
            Principal:
              Service: application-autoscaling.amazonaws.com
      Policies:
        - PolicyName: Scaling
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'application-autoscaling:*'
                  - 'ecs:*'
                  - 'cloudwatch:*'
                Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 1e57fc0f-4c6b-4601-b986-5edb1e2a0116
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Ref 'AWS::StackName'
      RetentionInDays: 7
    Metadata:
      'AWS::CloudFormation::Designer':
        id: e5681cd5-d4c1-45c7-8489-74a733a76a88
  EcrRepository:
    Type: 'AWS::ECR::Repository'
    Properties:
      RepositoryName: !Ref 'AWS::StackName'
      RepositoryPolicyText:
        Version: 2012-10-17
        Statement:
          - Sid: CodeBuildPushPull
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action:
              - 'ecr:GetDownloadUrlForLayer'
              - 'ecr:BatchGetImage'
              - 'ecr:BatchCheckLayerAvailability'
              - 'ecr:PutImage'
              - 'ecr:InitiateLayerUpload'
              - 'ecr:UploadLayerPart'
              - 'ecr:CompleteLayerUpload'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 4b2ec0a0-c276-4f88-800a-697f0c9a5ae7
  EcsTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    DependsOn:
      - EcrRepository
    Properties:
      Family: !Ref 'AWS::StackName'
      ContainerDefinitions:
        - Name: !Ref 'AWS::StackName'
          Image: !Sub >-
            ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AWS::StackName}:latest
          Cpu: 256
          MemoryReservation: 512
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'AWS::StackName'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref 'AWS::StackName'
          Environment:
            - Name: NODE_ENV
              Value: production
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 1f47bd64-d89a-4591-9936-c502f24e4930
  EcsService:
    Type: 'AWS::ECS::Service'
    DependsOn:
      - EcrRepository
    Properties:
      TaskDefinition: !Ref EcsTaskDefinition
      DesiredCount: 0
      LaunchType: FARGATE
      DeploymentConfiguration:
        MinimumHealthyPercent: 50
      PlacementStrategies:
        - Type: spread
          Field: instanceId
      Cluster: !Ref EcsCluster
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 18b21e29-f31d-4ef5-9e93-effec4fb3da3
  EcsServiceScalingTarget:
    Type: 'AWS::ApplicationAutoScaling::ScalableTarget'
    Properties:
      MinCapacity: 0
      MaxCapacity: 0
      ResourceId: !Sub
        - 'service/${EcsCluster}/${EcsService}'
        - EcsCluster: !Ref EcsCluster
          EcsService: !GetAtt EcsService.Name
      RoleARN: !GetAtt EcsServiceScalingTargetRole.Arn
      ScalableDimension: 'ecs:service:DesiredCount'
      ServiceNamespace: ecs
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c8e9fa23-df48-403b-91e5-10a73650d6e9
  EcsServiceScaleOutPolicy:
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: EcsServiceScaleOutPolicy
      PolicyType: StepScaling
      ScalingTargetId: !Ref EcsServiceScalingTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 10
            ScalingAdjustment: 10
          - MetricIntervalLowerBound: 10
            ScalingAdjustment: 30
    Metadata:
      'AWS::CloudFormation::Designer':
        id: cb933569-14f2-4e61-9ada-6a87efdb935d
  EcsServiceScaleInPolicy:
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: EcsServiceScaleInPolicy
      PolicyType: StepScaling
      ScalingTargetId: !Ref EcsServiceScalingTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        StepAdjustments:
          - MetricIntervalLowerBound: -10
            MetricIntervalUpperBound: 0
            ScalingAdjustment: -10
          - MetricIntervalUpperBound: -10
            ScalingAdjustment: -30
    Metadata:
      'AWS::CloudFormation::Designer':
        id: da799315-0972-47ec-b529-5c9383dac42d
  EcsServiceHighCPUAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      EvaluationPeriods: 2
      Statistic: Average
      Threshold: 70
      AlarmDescription: Alarm if ECS Service CPU high.
      Period: 60
      AlarmActions:
        - !Ref EcsServiceScaleOutPolicy
      Namespace: AWS/ECS
      Dimensions:
        - Name: ClusterName
          Value: !Ref EcsCluster
        - Name: ServiceName
          Value: !GetAtt EcsService.Name
      ComparisonOperator: GreaterThanOrEqualToThreshold
      MetricName: CPUUtilization
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 6eb4ee36-cae5-447e-a332-f8c6f6952bdc
  EcsServiceLowCPUAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      EvaluationPeriods: 2
      Statistic: Average
      Threshold: 40
      AlarmDescription: Alarm if ECS Service CPU low.
      Period: 60
      AlarmActions:
        - !Ref EcsServiceScaleInPolicy
      Namespace: AWS/ECS
      Dimensions:
        - Name: ClusterName
          Value: !Ref EcsCluster
        - Name: ServiceName
          Value: !GetAtt EcsService.Name
      ComparisonOperator: LessThanOrEqualToThreshold
      MetricName: CPUUtilization
    Metadata:
      'AWS::CloudFormation::Designer':
        id: eec4ae7e-22d2-4dd7-8319-d92094b28b5c
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref PipelineBucketName
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 803baf34-8d23-440d-9c8b-ef4d1d4f793f
  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
            Principal:
              Service: codebuild.amazonaws.com
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                Resource: !Sub
                  - 'arn:aws:s3:::${S3Bucket}*'
                  - S3Bucket: !Ref S3Bucket
        - PolicyName: ServicesAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:*'
                  - 'codecommit:*'
                Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 6a653ad8-44ec-403f-863f-bbee78b7dc62
  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
            Principal:
              Service: codepipeline.amazonaws.com
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                Resource: !Sub
                  - 'arn:aws:s3:::${S3Bucket}/*'
                  - S3Bucket: !Ref S3Bucket
        - PolicyName: ServicesAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codepipeline:*'
                  - 'codebuild:*'
                  - 'lambda:*'
                  - 'iam:ListRoles'
                  - 'iam:PassRole'
                Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f1d0c5d0-2e60-44bb-bc54-3f910783c79a
  CodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Ref 'AWS::StackName'
      Description: App on ECS.
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: linuxContainer
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: 'aws/codebuild/docker:1.12.1'
        EnvironmentVariables:
          - Name: APP_NAME
            Value: !Ref 'AWS::StackName'
          - Name: APP_IMAGE
            Value: !Sub >-
              ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AWS::StackName}:latest
      TimeoutInMinutes: 10
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
        - Key: role
          Value: !Ref 'AWS::StackName'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 2e268859-4a87-4597-ac79-c1cd7e091f64
  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket
      Name: !Ref 'AWS::StackName'
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              RunOrder: 1
              ActionTypeId:
                Version: 1
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
              OutputArtifacts:
                - Name: !Ref 'AWS::StackName'
              Configuration:
                Owner: !Ref RepoOwner
                Repo: !Ref RepoName
                Branch: !Ref BranchName
                OAuthToken: !Ref GitHubAuthToken
        - Name: Build
          Actions:
            - Name: Build
              RunOrder: 1
              Configuration:
                ProjectName: !Ref 'AWS::StackName'
              InputArtifacts:
                - Name: !Ref 'AWS::StackName'
              ActionTypeId:
                Version: 1
                Category: Build
                Owner: AWS
                Provider: CodeBuild
              OutputArtifacts:
                - Name: !Sub '${AWS::StackName}-built'
        - Name: Deploy
          Actions:
            - Name: Deployer
              RunOrder: 1
              ActionTypeId:
                Version: 1
                Category: Invoke
                Owner: AWS
                Provider: Lambda
              Configuration:
                FunctionName: !ImportValue 'ops-lambdas-prod:EcsDeployerLambdaFunctionName'
                UserParameters: !Sub
                  - |
                    {
                      "Service": "${AWS::StackName}",
                      "Family": "${AWS::StackName}",
                      "EcsService": {
                        "Name": "${EcsServiceName}",
                        "Arn": "${EcsServiceArn}",
                        "Cluster": "${EcsServiceCluster}"
                      }
                    }
                  - EcsServiceName: !GetAtt EcsService.Name
                    EcsServiceArn: !Ref EcsService
                    EcsServiceCluster: !GetAtt EcsCluster.Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 9797f26f-4943-4390-aa54-120b4a7454e0
Outputs:
  EcsClusterName:
    Description: ECS Cluster Name.
    Value: !Ref EcsCluster
  ServiceName:
    Description: ECS service name.
    Value: !Ref EcsService
Metadata:
  'AWS::CloudFormation::Designer':
    803baf34-8d23-440d-9c8b-ef4d1d4f793f:
      size:
        width: 60
        height: 60
      position:
        x: 290
        'y': 500
      z: 1
      embeds: []
    f1d0c5d0-2e60-44bb-bc54-3f910783c79a:
      size:
        width: 60
        height: 60
      position:
        x: 290
        'y': 600
      z: 1
      embeds: []
    6a653ad8-44ec-403f-863f-bbee78b7dc62:
      size:
        width: 60
        height: 60
      position:
        x: 290
        'y': 400
      z: 1
      embeds: []
    2e268859-4a87-4597-ac79-c1cd7e091f64:
      size:
        width: 60
        height: 60
      position:
        x: 390
        'y': 400
      z: 1
      embeds: []
    4b2ec0a0-c276-4f88-800a-697f0c9a5ae7:
      size:
        width: 60
        height: 60
      position:
        x: 470
        'y': 500
      z: 1
      embeds: []
    1f47bd64-d89a-4591-9936-c502f24e4930:
      size:
        width: 60
        height: 60
      position:
        x: 470
        'y': 600
      z: 0
      embeds: []
      dependson:
        - 4b2ec0a0-c276-4f88-800a-697f0c9a5ae7
    e5681cd5-d4c1-45c7-8489-74a733a76a88:
      size:
        width: 160
        height: 170
      position:
        x: 470
        'y': 310
      z: 1
      embeds: []
    1e57fc0f-4c6b-4601-b986-5edb1e2a0116:
      size:
        width: 60
        height: 60
      position:
        x: 770
        'y': 600
      z: 1
      embeds: []
    b0eee512-5e4b-4326-a549-f8c1a8265954:
      size:
        width: 60
        height: 60
      position:
        x: 570
        'y': 600
      z: 1
      embeds: []
    18b21e29-f31d-4ef5-9e93-effec4fb3da3:
      size:
        width: 60
        height: 60
      position:
        x: 570
        'y': 500
      z: 1
      embeds: []
      dependson:
        - 4b2ec0a0-c276-4f88-800a-697f0c9a5ae7
    9797f26f-4943-4390-aa54-120b4a7454e0:
      size:
        width: 60
        height: 60
      position:
        x: 390
        'y': 600
      z: 1
      embeds: []
    c8e9fa23-df48-403b-91e5-10a73650d6e9:
      size:
        width: 60
        height: 60
      position:
        x: 670
        'y': 600
      z: 1
      embeds: []
    da799315-0972-47ec-b529-5c9383dac42d:
      size:
        width: 60
        height: 60
      position:
        x: 770
        'y': 500
      z: 1
      embeds: []
      isassociatedwith:
        - c8e9fa23-df48-403b-91e5-10a73650d6e9
    eec4ae7e-22d2-4dd7-8319-d92094b28b5c:
      size:
        width: 60
        height: 60
      position:
        x: 770
        'y': 400
      z: 1
      embeds: []
    cb933569-14f2-4e61-9ada-6a87efdb935d:
      size:
        width: 60
        height: 60
      position:
        x: 670
        'y': 500
      z: 1
      embeds: []
      isassociatedwith:
        - c8e9fa23-df48-403b-91e5-10a73650d6e9
    6eb4ee36-cae5-447e-a332-f8c6f6952bdc:
      size:
        width: 60
        height: 60
      position:
        x: 670
        'y': 400
      z: 1
      embeds: []
